<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS2//8ktv//JLb//yS2//8ktv//JLb//yS2
        //8ktv//JLb//yS2//8ktv//JLb//yS2//8ktv//JLb//yS2//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS2//8ktv//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS2//8ktv//AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS2//8ktv//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAktv//JLb//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJLb//wAAAAAAAAAAAAAAAAAAAAAAAAAAJLb//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJLb//wAAAAAAAAAAAAAAAAAAAAAktv//AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//AAAAAAAAAAAAAAAAJLb//wAA
        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
        gOMAAIDoAACA+QAAAAAAAAAAAAAAACS2//8AAAAAAAAAAAAAAAAktv//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//AAAAAAAAAAAAAAAAAAAAACS2//8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS2//8AAAAAAAAAAAAAAAAAAAAAAAAAACS2
        //8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACS2//8ktv//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//JLb//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//JLb//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktv//JLb//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJLb//yS2//8ktv//JLb//yS2
        //8ktv//JLb//yS2//8ktv//JLb//yS2//8ktv//JLb//yS2//8ktv//JLb//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAA//z//z/z///P7///99////vf///7h/GAHYfxgB1HwY/GR8GPxkeB
        j+JHgY/iR4GP4keBj+JHMY/iRzGP4kRxj+JEcY/iQPGP4kDxj+JA8Y/iQPGP4kPxj8ZD8Y/Gh/GAHYfx
        gB3f///73///++////fz///P/P//P/8AAP8=
</value>
  </data>
</root>